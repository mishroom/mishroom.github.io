{"ast":null,"code":"var _jsxFileName = \"/Users/mishallafzal/Desktop/portfolio/src/App.js\";\nimport React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\"; // import \"./fullpage.parallax.min\";\n\nimport logo from \"./logo.png\";\nimport profileImage from \"./pic.jpg\";\nimport \"./App.css\";\nconst SEL = \"custom-section\";\nconst SECTION_SEL = \".\".concat(SEL); // NOTE: if using fullpage extensions/plugins put them here and pass it as props\n\nconst pluginWrapper = () => {// require(\"fullpage.js/vendors/scrolloverflow\"); // Optional. When using scrollOverflow:true\n  // require(\"./fullpage.parallax.min\")\n};\n\nconst originalColors = [\n/*\"#a1e0fb\", \"rgb(250, 221, 181)\",*/\n\"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\", \"#fff\" // \"rgb(250, 221, 181)\",\n// \"rgb(250, 221, 181)\",\n// \"rgb(250, 221, 181)\",\n// \"rgb(250, 221, 181)\"\n// \"#8baedf\",\n// \"#7680c5\",\n// \"#5e4aa7\",\n// \"#4b208f\"\n]; // class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       sectionsColor: [...originalColors],\n//       fullpages: [\n//         {\n//           text: \"section 1\"\n//         },\n//         {\n//           text: \"section 2\"\n//         },\n//         {\n//           text: \"section 3\"\n//         }\n//       ]\n//     };\n//   }\n//\n//   onLeave(origin, destination, direction) {\n//     console.log(\"onLeave\", { origin, destination, direction });\n//     // arguments are mapped in order of fullpage.js callback arguments do something\n//     // with the event\n//   }\n//\n//   handleChangeColors() {\n//     const newColors =\n//       this.state.sectionsColor[0] === \"yellow\"\n//         ? [...originalColors]\n//         : [\"yellow\", \"blue\", \"white\"];\n//     this.setState({\n//       sectionsColor: newColors\n//     });\n//   }\n//\n//   handleAddSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const { length } = fullpages;\n//       fullpages.push({\n//         text: `section ${length + 1}`,\n//         id: Math.random()\n//       });\n//\n//       return {\n//         fullpages: [...fullpages]\n//       };\n//     });\n//   }\n//\n//   handleRemoveSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const newPages = [...fullpages];\n//       newPages.pop();\n//\n//       return { fullpages: newPages };\n//     });\n//   }\n//\n//   render() {\n//     const { fullpages } = this.state;\n//\n//     if (!fullpages.length) {\n//       return null;\n//     }\n//\n//     const Menu = () => (\n//       <div\n//         className=\"menu\"\n//         style={{\n//           position: \"fixed\",\n//           top: 0,\n//           zIndex: 100\n//         }}\n//       >\n//         <ul>\n//           <li>\n//             <button onClick={() => this.handleAddSection()}>+ Section</button>\n//             <button onClick={() => this.handleRemoveSection()}>\n//               - Section\n//             </button>\n//             <button onClick={() => this.handleChangeColors()}>\n//               Change colors\n//             </button>\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//\n//     return (\n//       <div className=\"App\">\n//         <Menu />\n//         <ReactFullpage\n//           debug /* Debug logging */\n//           navigation\n//           anchors={[\"firstPage\", \"secondPage\", \"thirdPage\"]}\n//           sectionSelector={SECTION_SEL}\n//           onLeave={this.onLeave.bind(this)}\n//           sectionsColor={this.state.sectionsColor}\n//           parallax\n//           pluginWrapper={pluginWrapper}\n//           render={comp => (\n//             <ReactFullpage.Wrapper>\n//               {fullpages.map(({ text }) => (\n//                 <div key={text} className={SEL}>\n//                   <div class=\"fp-bg\" />\n//                   <h1>{text}</h1>\n//                 </div>\n//               ))}\n//             </ReactFullpage.Wrapper>\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nconst Menu = () => React.createElement(\"div\", {\n  style: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"menu\",\n  style: {\n    position: \"fixed\",\n    zIndex: 100,\n    background: \"rgb(250, 221, 181)\",\n    padding: \"1em\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 161\n  },\n  __self: this\n}, \"menu placeholder here\", React.createElement(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 172\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  onClick: () => this.handleAddSection(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 173\n  },\n  __self: this\n}, \"+ Section\"), React.createElement(\"button\", {\n  onClick: () => this.handleRemoveSection(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, \"- Section\"), React.createElement(\"button\", {\n  onClick: () => this.handleChangeColors(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177\n  },\n  __self: this\n}, \"Change colors\")))));\n\nconst App = () => React.createElement(\"div\", {\n  className: \"App\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187\n  },\n  __self: this\n}, React.createElement(ReactFullpage, {\n  pluginWrapper: pluginWrapper // sectionsColor={originalColors}\n  ,\n  render: ({\n    state,\n    fullpageApi\n  }) => {\n    return React.createElement(ReactFullpage.Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section opener\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"mishroom\",\n      width: \"800vw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Websites | Apps | Sysytems\")), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"fp-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"About\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Hi! My name is Mishall. I'm a freelance developer based in Redwood City. I'm currently a fullstack developer, and I work with clients to build the apps, websites, and systems they need.\")), React.createElement(\"img\", {\n      className: \"column\",\n      src: profileImage,\n      alt: \"mishroom\",\n      width: \"550vw\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"fp-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"My work\")), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"fp-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Have a project?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"I'm always looking to take on new clients! Let's talk about what your needs are, and how I can provide a solution to your needs.\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Have a bigger project?\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Even better! I'm a part of an incredible freelance team consisting of a product manager, 3 backend and systems engineers, and me! Check us out at DevHill.com!\")), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"fp-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Contact\")));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189\n  },\n  __self: this\n}));\n\nexport default App;","map":{"version":3,"sources":["/Users/mishallafzal/Desktop/portfolio/src/App.js"],"names":["React","ReactFullpage","logo","profileImage","SEL","SECTION_SEL","pluginWrapper","originalColors","Menu","display","justifyContent","position","zIndex","background","padding","handleAddSection","handleRemoveSection","handleChangeColors","App","state","fullpageApi"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n// import \"./fullpage.parallax.min\";\nimport logo from \"./logo.png\";\nimport profileImage from \"./pic.jpg\"\nimport \"./App.css\";\n\nconst SEL = \"custom-section\";\nconst SECTION_SEL = `.${SEL}`;\n\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props\nconst pluginWrapper = () => {\n  // require(\"fullpage.js/vendors/scrolloverflow\"); // Optional. When using scrollOverflow:true\n  // require(\"./fullpage.parallax.min\")\n};\n\nconst originalColors = [\n  /*\"#a1e0fb\", \"rgb(250, 221, 181)\",*/\n  \"#fff\",\n  \"#fff\",\n  \"#fff\",\n  \"#fff\",\n  \"#fff\",\n  \"#fff\",\n  \"#fff\"\n  // \"rgb(250, 221, 181)\",\n  // \"rgb(250, 221, 181)\",\n  // \"rgb(250, 221, 181)\",\n  // \"rgb(250, 221, 181)\"\n  // \"#8baedf\",\n  // \"#7680c5\",\n  // \"#5e4aa7\",\n  // \"#4b208f\"\n];\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       sectionsColor: [...originalColors],\n//       fullpages: [\n//         {\n//           text: \"section 1\"\n//         },\n//         {\n//           text: \"section 2\"\n//         },\n//         {\n//           text: \"section 3\"\n//         }\n//       ]\n//     };\n//   }\n//\n//   onLeave(origin, destination, direction) {\n//     console.log(\"onLeave\", { origin, destination, direction });\n//     // arguments are mapped in order of fullpage.js callback arguments do something\n//     // with the event\n//   }\n//\n//   handleChangeColors() {\n//     const newColors =\n//       this.state.sectionsColor[0] === \"yellow\"\n//         ? [...originalColors]\n//         : [\"yellow\", \"blue\", \"white\"];\n//     this.setState({\n//       sectionsColor: newColors\n//     });\n//   }\n//\n//   handleAddSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const { length } = fullpages;\n//       fullpages.push({\n//         text: `section ${length + 1}`,\n//         id: Math.random()\n//       });\n//\n//       return {\n//         fullpages: [...fullpages]\n//       };\n//     });\n//   }\n//\n//   handleRemoveSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const newPages = [...fullpages];\n//       newPages.pop();\n//\n//       return { fullpages: newPages };\n//     });\n//   }\n//\n//   render() {\n//     const { fullpages } = this.state;\n//\n//     if (!fullpages.length) {\n//       return null;\n//     }\n//\n//     const Menu = () => (\n//       <div\n//         className=\"menu\"\n//         style={{\n//           position: \"fixed\",\n//           top: 0,\n//           zIndex: 100\n//         }}\n//       >\n//         <ul>\n//           <li>\n//             <button onClick={() => this.handleAddSection()}>+ Section</button>\n//             <button onClick={() => this.handleRemoveSection()}>\n//               - Section\n//             </button>\n//             <button onClick={() => this.handleChangeColors()}>\n//               Change colors\n//             </button>\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//\n//     return (\n//       <div className=\"App\">\n//         <Menu />\n//         <ReactFullpage\n//           debug /* Debug logging */\n//           navigation\n//           anchors={[\"firstPage\", \"secondPage\", \"thirdPage\"]}\n//           sectionSelector={SECTION_SEL}\n//           onLeave={this.onLeave.bind(this)}\n//           sectionsColor={this.state.sectionsColor}\n//           parallax\n//           pluginWrapper={pluginWrapper}\n//           render={comp => (\n//             <ReactFullpage.Wrapper>\n//               {fullpages.map(({ text }) => (\n//                 <div key={text} className={SEL}>\n//                   <div class=\"fp-bg\" />\n//                   <h1>{text}</h1>\n//                 </div>\n//               ))}\n//             </ReactFullpage.Wrapper>\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nconst Menu = () => (\n  <div\n    style={{\n      display: \"flex\",\n      justifyContent: \"center\"\n    }}\n  >\n    <div\n      className=\"menu\"\n      style={{\n        position: \"fixed\",\n        zIndex: 100,\n        background: \"rgb(250, 221, 181)\",\n        padding: \"1em\"\n      }}\n    >\n      menu placeholder here\n      <ul>\n           <li>\n             <button onClick={() => this.handleAddSection()}>+ Section</button>\n             <button onClick={() => this.handleRemoveSection()}>\n               - Section\n             </button>\n             <button onClick={() => this.handleChangeColors()}>\n               Change colors\n             </button>\n           </li>\n         </ul>\n    </div>\n  </div>\n);\n\nconst App = () => (\n  <div className=\"App\">\n    {/* <Menu /> */}\n    <ReactFullpage\n      pluginWrapper={pluginWrapper}\n      // sectionsColor={originalColors}\n      render={({ state, fullpageApi }) => {\n        return (\n          <ReactFullpage.Wrapper>\n            <div className=\"section opener\">\n            {/* <div className='test'> */}\n              <img src={logo} alt=\"mishroom\" width=\"800vw\" />\n              <br />\n              <span>Websites | Apps | Sysytems</span>\n            {/* </div> */}\n              \n\n              {/*\n                <button onClick={() => fullpageApi.moveSectionDown()}>\n                <br />\n                <span>Something | Something | Something</span><button onClick={() => fullpageApi.moveSectionDown()}>\n                Click me to move down\n              </button>\n              <svg viewBox=\"0 0 425 300\">\n                <path\n                  id=\"curve\"\n                  d=\"M6,150C49.63,93,105.79,36.65,156.2,47.55,207.89,58.74,213,131.91,264,150c40.67,14.43,108.57-6.91,229-145\"\n                />\n              </svg>*/}\n            </div>\n            <div className=\"section\">\n              <div class=\"fp-bg\" />\n              <div className=\"about\">\n                <div className=\"column\">\n                  <h1>About</h1>\n                  <p>\n                    Hi! My name is Mishall. I'm a freelance developer based in Redwood City. I'm currently a fullstack developer, and I work with clients to build the apps, websites, and systems they need.\n                  </p>\n                </div>\n                \n                <img className=\"column\" src={profileImage} alt=\"mishroom\" width=\"550vw\" />\n              </div>   \n            </div>\n            <div className=\"section\">\n              <div class=\"fp-bg\" />\n              <h1>My work</h1>\n            </div>\n            <div className=\"section\">\n              <div class=\"fp-bg\" />\n              <h1>Have a project?</h1>\n              <p>\n                I'm always looking to take on new clients! Let's talk about what your needs are, and how I can provide a solution to your needs.\n              </p>\n              <h1>Have a bigger project?</h1>\n              <p>\n                Even better! I'm a part of an incredible freelance team consisting of a product manager, 3 backend and systems engineers, and me! \n                Check us out at DevHill.com!\n              </p>\n            </div>\n            <div className=\"section\">\n              <div class=\"fp-bg\" />\n              <h1>Contact</h1>\n            </div>\n          </ReactFullpage.Wrapper>\n        );\n      }}\n    />\n  </div>\n);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}