{"ast":null,"code":"var _jsxFileName = \"/Users/mishallafzal/Desktop/portfolio/src/App.js\";\nimport React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\"; // import \"./fullpage.parallax.min\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nconst SEL = \"custom-section\";\nconst SECTION_SEL = \".\".concat(SEL); // NOTE: if using fullpage extensions/plugins put them here and pass it as props\n\nconst pluginWrapper = () => {// require(\"fullpage.js/vendors/scrolloverflow\"); // Optional. When using scrollOverflow:true\n  // require(\"./fullpage.parallax.min\")\n};\n\nconst originalColors = [\"#282c34\", \"#ff5f45\", \"#0798ec\"]; // class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       sectionsColor: [...originalColors],\n//       fullpages: [\n//         {\n//           text: \"section 1\"\n//         },\n//         {\n//           text: \"section 2\"\n//         },\n//         {\n//           text: \"section 3\"\n//         }\n//       ]\n//     };\n//   }\n//\n//   onLeave(origin, destination, direction) {\n//     console.log(\"onLeave\", { origin, destination, direction });\n//     // arguments are mapped in order of fullpage.js callback arguments do something\n//     // with the event\n//   }\n//\n//   handleChangeColors() {\n//     const newColors =\n//       this.state.sectionsColor[0] === \"yellow\"\n//         ? [...originalColors]\n//         : [\"yellow\", \"blue\", \"white\"];\n//     this.setState({\n//       sectionsColor: newColors\n//     });\n//   }\n//\n//   handleAddSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const { length } = fullpages;\n//       fullpages.push({\n//         text: `section ${length + 1}`,\n//         id: Math.random()\n//       });\n//\n//       return {\n//         fullpages: [...fullpages]\n//       };\n//     });\n//   }\n//\n//   handleRemoveSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const newPages = [...fullpages];\n//       newPages.pop();\n//\n//       return { fullpages: newPages };\n//     });\n//   }\n//\n//   render() {\n//     const { fullpages } = this.state;\n//\n//     if (!fullpages.length) {\n//       return null;\n//     }\n//\n//     const Menu = () => (\n//       <div\n//         className=\"menu\"\n//         style={{\n//           position: \"fixed\",\n//           top: 0,\n//           zIndex: 100\n//         }}\n//       >\n//         <ul>\n//           <li>\n//             <button onClick={() => this.handleAddSection()}>+ Section</button>\n//             <button onClick={() => this.handleRemoveSection()}>\n//               - Section\n//             </button>\n//             <button onClick={() => this.handleChangeColors()}>\n//               Change colors\n//             </button>\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//\n//     return (\n//       <div className=\"App\">\n//         <Menu />\n//         <ReactFullpage\n//           debug /* Debug logging */\n//           navigation\n//           anchors={[\"firstPage\", \"secondPage\", \"thirdPage\"]}\n//           sectionSelector={SECTION_SEL}\n//           onLeave={this.onLeave.bind(this)}\n//           sectionsColor={this.state.sectionsColor}\n//           parallax\n//           pluginWrapper={pluginWrapper}\n//           render={comp => (\n//             <ReactFullpage.Wrapper>\n//               {fullpages.map(({ text }) => (\n//                 <div key={text} className={SEL}>\n//                   <div class=\"fp-bg\" />\n//                   <h1>{text}</h1>\n//                 </div>\n//               ))}\n//             </ReactFullpage.Wrapper>\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n//\n\nconst App = () => React.createElement(ReactFullpage, {\n  pluginWrapper: true,\n  render: ({\n    state,\n    fullpageApi\n  }) => {\n    return React.createElement(ReactFullpage.Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Section 1 (welcome to fullpage.js)\"), React.createElement(\"button\", {\n      onClick: () => fullpageApi.moveSectionDown(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Click me to move down\")), React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Section 2\")));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n});\n\nexport default App;","map":{"version":3,"sources":["/Users/mishallafzal/Desktop/portfolio/src/App.js"],"names":["React","ReactFullpage","SEL","SECTION_SEL","pluginWrapper","originalColors","App","state","fullpageApi","moveSectionDown"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CACA;;;AAEA,OAAO,WAAP;AAEA,MAAMC,GAAG,GAAG,gBAAZ;AACA,MAAMC,WAAW,cAAOD,GAAP,CAAjB,C,CAEA;;AACA,MAAME,aAAa,GAAG,MAAM,CAC1B;AACA;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAvoBAAC,aAAD;AACE,EAAA,aAAa,MADf;AAEE,EAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAA4B;AAClC,WACE,oBAAC,aAAD,CAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAMA,WAAW,CAACC,eAAZ,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAPF,CADF;AAaD,GAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAoBA,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n// import \"./fullpage.parallax.min\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst SEL = \"custom-section\";\nconst SECTION_SEL = `.${SEL}`;\n\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props\nconst pluginWrapper = () => {\n  // require(\"fullpage.js/vendors/scrolloverflow\"); // Optional. When using scrollOverflow:true\n  // require(\"./fullpage.parallax.min\")\n};\n\nconst originalColors = [\"#282c34\", \"#ff5f45\", \"#0798ec\"];\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       sectionsColor: [...originalColors],\n//       fullpages: [\n//         {\n//           text: \"section 1\"\n//         },\n//         {\n//           text: \"section 2\"\n//         },\n//         {\n//           text: \"section 3\"\n//         }\n//       ]\n//     };\n//   }\n//\n//   onLeave(origin, destination, direction) {\n//     console.log(\"onLeave\", { origin, destination, direction });\n//     // arguments are mapped in order of fullpage.js callback arguments do something\n//     // with the event\n//   }\n//\n//   handleChangeColors() {\n//     const newColors =\n//       this.state.sectionsColor[0] === \"yellow\"\n//         ? [...originalColors]\n//         : [\"yellow\", \"blue\", \"white\"];\n//     this.setState({\n//       sectionsColor: newColors\n//     });\n//   }\n//\n//   handleAddSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const { length } = fullpages;\n//       fullpages.push({\n//         text: `section ${length + 1}`,\n//         id: Math.random()\n//       });\n//\n//       return {\n//         fullpages: [...fullpages]\n//       };\n//     });\n//   }\n//\n//   handleRemoveSection() {\n//     this.setState(state => {\n//       const { fullpages } = state;\n//       const newPages = [...fullpages];\n//       newPages.pop();\n//\n//       return { fullpages: newPages };\n//     });\n//   }\n//\n//   render() {\n//     const { fullpages } = this.state;\n//\n//     if (!fullpages.length) {\n//       return null;\n//     }\n//\n//     const Menu = () => (\n//       <div\n//         className=\"menu\"\n//         style={{\n//           position: \"fixed\",\n//           top: 0,\n//           zIndex: 100\n//         }}\n//       >\n//         <ul>\n//           <li>\n//             <button onClick={() => this.handleAddSection()}>+ Section</button>\n//             <button onClick={() => this.handleRemoveSection()}>\n//               - Section\n//             </button>\n//             <button onClick={() => this.handleChangeColors()}>\n//               Change colors\n//             </button>\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//\n//     return (\n//       <div className=\"App\">\n//         <Menu />\n//         <ReactFullpage\n//           debug /* Debug logging */\n//           navigation\n//           anchors={[\"firstPage\", \"secondPage\", \"thirdPage\"]}\n//           sectionSelector={SECTION_SEL}\n//           onLeave={this.onLeave.bind(this)}\n//           sectionsColor={this.state.sectionsColor}\n//           parallax\n//           pluginWrapper={pluginWrapper}\n//           render={comp => (\n//             <ReactFullpage.Wrapper>\n//               {fullpages.map(({ text }) => (\n//                 <div key={text} className={SEL}>\n//                   <div class=\"fp-bg\" />\n//                   <h1>{text}</h1>\n//                 </div>\n//               ))}\n//             </ReactFullpage.Wrapper>\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n//\n\nconst App = () => (\n  <ReactFullpage\n    pluginWrapper\n    render={({ state, fullpageApi }) => {\n      return (\n        <ReactFullpage.Wrapper>\n          <div className=\"section\">\n            <p>Section 1 (welcome to fullpage.js)</p>\n            <button onClick={() => fullpageApi.moveSectionDown()}>\n              Click me to move down\n            </button>\n          </div>\n          <div className=\"section\">\n            <p>Section 2</p>\n          </div>\n        </ReactFullpage.Wrapper>\n      );\n    }}\n  />\n);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}