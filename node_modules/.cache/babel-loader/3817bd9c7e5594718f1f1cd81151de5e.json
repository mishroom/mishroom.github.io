{"ast":null,"code":"var _jsxFileName = \"/Users/mishallafzal/Desktop/portfolio/src/App.js\";\nimport React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\"; // import ;\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nconst SEL = \"custom-section\";\nconst SECTION_SEL = \".\".concat(SEL); // NOTE: if using fullpage extensions/plugins put them here and pass it as props\n\nconst pluginWrapper = () => {\n  // require(\"fullpage.js/vendors/scrolloverflow\"); // Optional. When using scrollOverflow:true\n  require(\"./fullpage.parallax.min\");\n};\n\nconst originalColors = [\"#282c34\", \"#ff5f45\", \"#0798ec\"];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionsColor: [...originalColors],\n      fullpages: [{\n        text: \"section 1\"\n      }, {\n        text: \"section 2\"\n      }, {\n        text: \"section 3\"\n      }]\n    };\n  }\n\n  onLeave(origin, destination, direction) {\n    console.log(\"onLeave\", {\n      origin,\n      destination,\n      direction\n    }); // arguments are mapped in order of fullpage.js callback arguments do something\n    // with the event\n  }\n\n  handleChangeColors() {\n    const newColors = this.state.sectionsColor[0] === \"yellow\" ? [...originalColors] : [\"yellow\", \"blue\", \"white\"];\n    this.setState({\n      sectionsColor: newColors\n    });\n  }\n\n  handleAddSection() {\n    this.setState(state => {\n      const fullpages = state.fullpages;\n      const length = fullpages.length;\n      fullpages.push({\n        text: \"section \".concat(length + 1),\n        id: Math.random()\n      });\n      return {\n        fullpages: [...fullpages]\n      };\n    });\n  }\n\n  handleRemoveSection() {\n    this.setState(state => {\n      const fullpages = state.fullpages;\n      const newPages = [...fullpages];\n      newPages.pop();\n      return {\n        fullpages: newPages\n      };\n    });\n  }\n\n  render() {\n    const fullpages = this.state.fullpages;\n\n    if (!fullpages.length) {\n      return null;\n    }\n\n    const Menu = () => React.createElement(\"div\", {\n      className: \"menu\",\n      style: {\n        position: \"fixed\",\n        top: 0,\n        zIndex: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.handleAddSection(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"+ Section\"), React.createElement(\"button\", {\n      onClick: () => this.handleRemoveSection(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"- Section\"), React.createElement(\"button\", {\n      onClick: () => this.handleChangeColors(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Change colors\"))));\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(ReactFullpage, {\n      debug: true\n      /* Debug logging */\n      ,\n      navigation: true,\n      anchors: [\"firstPage\", \"secondPage\", \"thirdPage\"],\n      sectionSelector: SECTION_SEL,\n      onLeave: this.onLeave.bind(this),\n      sectionsColor: this.state.sectionsColor,\n      pluginWrapper: pluginWrapper,\n      render: comp => React.createElement(ReactFullpage.Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, fullpages.map(({\n        text\n      }) => React.createElement(\"div\", {\n        key: text,\n        className: SEL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"fp-bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, text)))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mishallafzal/Desktop/portfolio/src/App.js"],"names":["React","ReactFullpage","SEL","SECTION_SEL","pluginWrapper","require","originalColors","App","Component","constructor","props","state","sectionsColor","fullpages","text","onLeave","origin","destination","direction","console","log","handleChangeColors","newColors","setState","handleAddSection","length","push","id","Math","random","handleRemoveSection","newPages","pop","render","Menu","position","top","zIndex","bind","comp","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n// import ;\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst SEL = \"custom-section\";\nconst SECTION_SEL = `.${SEL}`;\n\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props\nconst pluginWrapper = () => {\n  // require(\"fullpage.js/vendors/scrolloverflow\"); // Optional. When using scrollOverflow:true\n  require(\"./fullpage.parallax.min\")\n};\n\nconst originalColors = [\"#282c34\", \"#ff5f45\", \"#0798ec\"];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionsColor: [...originalColors],\n      fullpages: [\n        {\n          text: \"section 1\"\n        },\n        {\n          text: \"section 2\"\n        },\n        {\n          text: \"section 3\"\n        }\n      ]\n    };\n  }\n\n  onLeave(origin, destination, direction) {\n    console.log(\"onLeave\", { origin, destination, direction });\n    // arguments are mapped in order of fullpage.js callback arguments do something\n    // with the event\n  }\n\n  handleChangeColors() {\n    const newColors =\n      this.state.sectionsColor[0] === \"yellow\"\n        ? [...originalColors]\n        : [\"yellow\", \"blue\", \"white\"];\n    this.setState({\n      sectionsColor: newColors\n    });\n  }\n\n  handleAddSection() {\n    this.setState(state => {\n      const { fullpages } = state;\n      const { length } = fullpages;\n      fullpages.push({\n        text: `section ${length + 1}`,\n        id: Math.random()\n      });\n\n      return {\n        fullpages: [...fullpages]\n      };\n    });\n  }\n\n  handleRemoveSection() {\n    this.setState(state => {\n      const { fullpages } = state;\n      const newPages = [...fullpages];\n      newPages.pop();\n\n      return { fullpages: newPages };\n    });\n  }\n\n  render() {\n    const { fullpages } = this.state;\n\n    if (!fullpages.length) {\n      return null;\n    }\n\n    const Menu = () => (\n      <div\n        className=\"menu\"\n        style={{\n          position: \"fixed\",\n          top: 0,\n          zIndex: 100\n        }}\n      >\n        <ul>\n          <li>\n            <button onClick={() => this.handleAddSection()}>+ Section</button>\n            <button onClick={() => this.handleRemoveSection()}>\n              - Section\n            </button>\n            <button onClick={() => this.handleChangeColors()}>\n              Change colors\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n\n    return (\n      <div className=\"App\">\n        <Menu />\n        <ReactFullpage\n          debug /* Debug logging */\n          navigation\n          anchors={[\"firstPage\", \"secondPage\", \"thirdPage\"]}\n          sectionSelector={SECTION_SEL}\n          onLeave={this.onLeave.bind(this)}\n          sectionsColor={this.state.sectionsColor}\n          pluginWrapper={pluginWrapper}\n          render={comp => (\n            <ReactFullpage.Wrapper>\n              {fullpages.map(({ text }) => (\n                <div key={text} className={SEL}>\n                  <div class=\"fp-bg\" />\n                  <h1>{text}</h1>\n                </div>\n              ))}\n            </ReactFullpage.Wrapper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}